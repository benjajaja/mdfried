name: Test and Build Flake ❄️

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:
  workflow_call:

jobs:
  nix-flake-test:
    name: Flake check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24

      - name: Cachix
        uses: cachix/cachix-action@v12
        with:
          name: mdfried-ci
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Flake check
        run: |
          nix flake show
          nix flake check --print-build-logs

  nix-build:
    name: Nix build
    runs-on: ubuntu-latest
    outputs:
      artifact_path: ${{ steps.upload-artifact.outputs.artifact_path }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24

      - name: Cachix
        uses: cachix/cachix-action@v12
        with:
          name: mdfried-ci
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build package
        run: |
          nix build . --print-build-logs

      - name: Patchelf
        run: |
          cp ./result/bin/mdfried .
          chmod u+w ./mdfried
          patchelf --set-interpreter /lib64/ld-linux-x86-64.so.2 mdfried

      - name: Test binary portability for Ubuntu 24.04
        run: |
          expected="mdfried 0.12.2"
          actual=$(docker run --rm -v $(pwd):/work ubuntu:24.04 /work/mdfried --version)
          echo "Expected: $expected"
          echo "Actual: $actual"
          if [[ "$actual" != "$expected" ]]; then
            echo "❌ Binary test failed!"
            exit 1
          else
            echo "✅ Binary works on Ubuntu 24.04"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mdfried-linux
          path: ./mdfried

  nix-build-windows:
    name: Nix build (windows)
    runs-on: ubuntu-latest
    outputs:
      artifact_path: ${{ steps.upload-artifact.outputs.artifact_path }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24

      - name: Cachix
        uses: cachix/cachix-action@v12
        with:
          name: mdfried-ci
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build package
        run: |
          nix build .#windows --print-build-logs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mdfried-windows
          path: ./result/bin/mdfried.exe
